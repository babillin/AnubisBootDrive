<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plugin "dynamix.cache.dirs">
<!ENTITY version "2.1.0">
<!ENTITY pkg "/boot/packages">
<!ENTITY rom "/boot/config/plugins/dynamix">
<!ENTITY img "/boot/config/plugins/images">
<!ENTITY gui "/usr/local/emhttp/plugins">
<!ENTITY log "/var/log/packages">
<!ENTITY reg "/var/log/plugins">
<!ENTITY src "https://raw.github.com/bergware/dynamix/master/download">
]>

<PLUGIN>
<!--
Copyright 2014, Bergware International
Dynamix Folder Caching - Store names in memory to avoid disk spin-ups

Version history:
 2014-01-23 - version 2.1.0 : unRAID v5/v6 alignment
 2013-12-21 - version 2.0.1 : Public release
 2013-12-01 - version 2.0.0 : Initial release

Plugin file locations:
 /boot/config/plugins/dynamix.cache.dirs-0.0.0-noarch-bergware.plg        # this file
 /boot/config/plugins/dynamix/dynamix.cache.dirs-0.0.0-i486-1.txz         # executable code
 /boot/config/plugins/images/dynamix.cache.dirs.png                       # icon file
 /boot/config/plugins/dynamix/dynamix.cache.dirs.cfg                      # non-volatile settings
 /var/log/plugins/dynamix.cache.dirs                                      # plugin registration

 /usr/local/emhttp/plugins/dynamix/event/disks_mounted.cache.dirs         # emhttp event script
 /usr/local/emhttp/plugins/dynamix/event/unmounting_disks.cache.dirs      # emhttp event script
 /etc/rc.d/rc.cachedirs                                                   # control script
 /etc/cache_dirs.conf                                                     # script settings
-->

<FILE Name="/tmp/plugin-startup" Run="/bin/bash">
<INLINE>
if [ -f /var/log/plugins/dynamix.webGui ]; then
# Prepare plugin
  rm -f $(ls &rom;/&plugin;*.t[xg]z 2>/dev/null | grep -v '&version;')
  rm -f &reg;/&plugin;
  rm -f /tmp/plugin-install
  rm -f /etc/rc.d/rc.cachedirs
  rm -f &gui;/dynamix/event/disks_mounted.&plugin;
  rm -f &gui;/dynamix/event/unmounting_disks.&plugin;
# Stop service
  process=/usr/local/sbin/cache_dirs
  pid=$(pidof -s -x $process)
  if [ -n "$pid" ]; then
    $process -q 1>/dev/null 2>&amp;1
  fi
# Proceed
  code=0
else
# Dynamix webGui not present
  echo "missing Dynamix webGui plugin !!!"
# Terminate
  code=1
fi
# Remove this script
rm -f /tmp/plugin-startup
exit $code
</INLINE>
</FILE>

<FILE Name="&rom;/&plugin;.cfg">
<INLINE>
service="0"
wait="-w"
busy="-B"
suspend=""
shares=""
minimum=""
maximum=""
depth=""
exclude=""
include=""
other=""
options=""
</INLINE>
</FILE>

<FILE Name="&rom;/&plugin;-&version;-i486-1.txz" Run="upgradepkg --install-new">
<URL>--no-check-certificate &src;/&plugin;-&version;-i486-1.txz</URL>
</FILE>

<FILE Name="&img;/&plugin;.png">
<URL>--no-check-certificate &src;/&plugin;.png</URL>
</FILE>

<FILE Name="&gui;/dynamix/images/&plugin;.png">
<LOCAL>&img;/&plugin;.png</LOCAL>
</FILE>

<FILE Name="/etc/rc.d/rc.cachedirs" Mode="0770">
<INLINE>
#!/bin/sh
program=cache_dirs
execute=/usr/local/sbin/$program
options=/etc/$program.conf
pid=$(pidof -s -x $execute)
run=/tmp/$program.run

case "$1" in
'start')
  if [ -z "$pid" ]; then
    echo "$execute $(cat $options) 2>/dev/null" >$run
    source $run
    rm -f $run
    echo "$program started"
  else
    echo "$program already running!"
  fi
;;
'stop')
  if [ -n "$pid" ]; then
    $execute -q 1>/dev/null 2>&amp;1
    timer=5
    until [ -z "$(pidof -s -x $execute)" ] || [ $timer -eq 0 ]; do
      timer=$((timer-1))
      sleep 1
    done
    echo "$program stopped"
  else
    echo "$program not running!"
  fi
;;
*)
  echo "Usage: $(basename $0) start|stop"
esac
</INLINE>
</FILE>

<FILE Name="&gui;/dynamix/event/disks_mounted.&plugin;" Mode="0770">
<INLINE>
#!/bin/bash
cfg="&rom;/&plugin;.cfg"
conf="/etc/cache_dirs.conf"
enable=$(grep "^service=" $cfg | cut -d'"' -f2)
if [ "$enable" == "1" ]; then
  if [ ! -f $conf ]; then
    grep "^options=" $cfg | cut -d'"' -f2- | sed 's:"$::' | tr -d "\n" > $conf
  fi
  /etc/rc.d/rc.cachedirs start >/dev/null
fi
</INLINE>
</FILE>

<FILE Name="&gui;/dynamix/event/unmounting_disks.&plugin;" Mode="0770">
<INLINE>
#!/bin/bash
cfg="&rom;/&plugin;.cfg"
enable=$(grep "^service=" $cfg | cut -d'"' -f2)
if [ "$enable" == "1" ]; then
  /etc/rc.d/rc.cachedirs stop >/dev/null
fi
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-install" Run="/bin/bash">
<INLINE>
cfg="&rom;/&plugin;.cfg"
echo "executing !"

# Start service
enable=$(grep "^service=" $cfg | cut -d'"' -f2)
if [ "$enable" == "1" ]; then
  /etc/rc.d/rc.cachedirs start >/dev/null
fi

# Update file access mode
chmod 600 $(awk '/(\.htm$|\.php$|\.js$|\.page$|\.css$|\.png$|\.gif$)/ {print "/"$0}' &log;/&plugin;-&version;-i486-1)

echo ""
echo "-----------------------------------------------------------"
echo " &plugin; has been installed."
echo " This plugin requires Dynamix webGui to operate"
echo " Copyright 2014, Bergware International"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""

# Remove this install file - we are done!
rm -f /tmp/plugin-install
</INLINE>
</FILE>

<FILE Name="&reg;/&plugin;">
<INLINE>
&plugin; v&version;
</INLINE>
</FILE>
</PLUGIN>